---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Lenovo.
--- DateTime: 2023/8/9 14:51
--- KEYS[1]: 限流 key
--- ARGV[1]: 限流窗口,毫秒
--- ARGV[2]: 当前时间戳（作为score）
--- ARGV[3]: 阈值
--- ARGV[4]: score 对应的唯一value
---

-- 1. 移除开始时间窗口之间的数据   ZREMRANGEBYSCORE key min max: 移除有序集中,指定分数区间内的所有成员
-- ARGV[2] - ARGV[1]剩下的是去重时间之前的分数区间，再通过ZREMRANGEBYSCORE移除，则只剩下去重时间之间的分数区间
redis.call('zremrangeByScore', KEYS[1], 0, ARGV[2] - ARGV[1])
-- 2. 统计当前元素数量    ZCARD KEY_NAME: 计算集合中元素的数量
local res = redis.call('zcard', KEYS[1])
-- 3. 是否超过阈值    tonumber函数会尝试将它的参数转换为数字
if (res == nil) or (res < tonumber(ARGV[3])) then
    redis.call('zadd', KEYS[1], ARGV[2], ARGV[4]) -- 设置score和value 或更新score
    redis.call('expire', KEYS[1], ARGV[1]/1000) -- 设置过期时间
    return 0 -- 未超过阈值返回0
else
    return 1 -- 超过阈值返回1

end